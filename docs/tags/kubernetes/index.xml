<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on XiaoXiao Notes</title>
    <link>https://blog.10oz.tw/tags/kubernetes/</link>
    <description>Recent content in kubernetes on XiaoXiao Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Mar 2021 01:24:28 +0800</lastBuildDate>
    
	<atom:link href="https://blog.10oz.tw/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>helm3 說 has no deployed releases</title>
      <link>https://blog.10oz.tw/20210326-helm3-has-no-deployed-releases/</link>
      <pubDate>Fri, 26 Mar 2021 01:24:28 +0800</pubDate>
      
      <guid>https://blog.10oz.tw/20210326-helm3-has-no-deployed-releases/</guid>
      <description>問題描述 helm release 明明就存在，但是他就是跟你說沒有部署的版本
Error: UPGRADE FAILED: &amp;quot;code-server&amp;quot; has no deployed releases 處理一下 原來是狀態不對，可能上一次部署的時候失敗了，只要你加上 --force 再給他跑下去就好
或者說去找到 secrets sh.helm.release.v1.{server_name}.v{version} 修改一下裡面的 labels status，改成 deployed
metadata:name:sh.helm.release.v1.code-server.v31namespace:foouid:b94b5861-8f98-4e8c-bb81-e715975d8c22resourceVersion:&amp;#39;46153334&amp;#39;creationTimestamp:&amp;#39;2021-03-04T06:12:08Z&amp;#39;labels:modifiedAt:&amp;#39;1614838331&amp;#39;name:code-serverowner:helmstatus:failed# 改這裏成 deployedversion:&amp;#39;31&amp;#39;再重新 Retry 一下 helm upgrade 就可以囉</description>
    </item>
    
    <item>
      <title>新米 Istio 篇</title>
      <link>https://blog.10oz.tw/20201115-a-istio-beginner/</link>
      <pubDate>Sun, 15 Nov 2020 01:36:30 +0800</pubDate>
      
      <guid>https://blog.10oz.tw/20201115-a-istio-beginner/</guid>
      <description>開始安裝 下載後會得到一個資料夾 istio-1.7.4 把他加入你的執行檔中吧
curl -L https://istio.io/downloadIstio | sh - export PATH=$PWD/istio-1.7.4/bin:$PATH istioctl version # 成功就是有囉 預設的 Profile 們有六個，我就先用 default 吧 | | default | demo | minimal | remote | empty | preview | | | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; | &amp;mdash;&amp;mdash;- | &amp;mdash;- | &amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash; | &amp;mdash;&amp;ndash; | &amp;mdash;&amp;mdash;- | &amp;mdash; | | Core components | | | | | | | | | istio-egressgateway | | X | | | | | | | istio-ingressgateway | X | X | | | | X | | | istiod | X | X | X | | | X | |</description>
    </item>
    
    <item>
      <title>我們想在虛擬機上跑個 k8s</title>
      <link>https://blog.10oz.tw/20200830-run-kubernetes-on-vm/</link>
      <pubDate>Sun, 30 Aug 2020 21:38:12 +0800</pubDate>
      
      <guid>https://blog.10oz.tw/20200830-run-kubernetes-on-vm/</guid>
      <description>環境 我們先用 macOS Catalina 10.15.2 來做筆記喔
1. 虛擬機 一開始當然是虛擬機啦，讓我們用 vagrant 搭配 virtual box 吧～
1.1 安裝 vagrant 跟 virtual box brew cask install vagrant vagrant version vagrant 使用版本 2.2.10
支援的 virtual box 版本沒有到最新的 6， 我們到這邊下載舊版吧
https://www.virtualbox.org/wiki/
 如果 mac 不給你開的話，記得可以到 系統偏好設定 &amp;gt; 安全性與隱私 &amp;gt; 一般 開啟權限
 1.2 設定 vagrant 第一步要先建立一個 Vagrantfile，我們選用 ubuntu 16.04 TLS
這邊也有更多選擇 &amp;ndash;&amp;gt; https://app.vagrantup.com/boxes/search
# 先在你喜歡的地方開個資料夾吧 mkdir -p ~/projects/vagrant/k8s-master cd ~/projects/vagrant/k8s-master vim Vagrantfile # -*- mode: ruby -*- # vi: set ft=ruby : Vagrant.</description>
    </item>
    
  </channel>
</rss>